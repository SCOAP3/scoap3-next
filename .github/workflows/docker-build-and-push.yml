name: test & docker build and push

on:
  push:
    branches: [master]
  release:
    types: [published]

jobs:
  tests:
    name:  test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ env.REF }}
      - name: Run services
        run: |
          docker-compose up -d indexer database redis rabbitmq;
      - name: Test
        run: |
          docker-compose -f docker-compose.yml -f docker-compose.test.yml run --rm tests

  docker:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: scoap3/scoap3:latest,scoap3/scoap3:${{ github.sha }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Deploy QA
        uses: peter-evans/repository-dispatch@v1
        if: ${{ github.event_name == 'push'}}
        with:
          token: ${{ secrets.INSPIRE_BOT_TOKEN }}
          repository: inspirehep/kubernetes
          event-type: deploy
          client-payload: '{"project": "scoap3", "application": "scoap3", "namespace": "scoap3-qa","image":"scoap3/scoap3","new_tag":"${{ github.sha }}"}'
  
      - name: Build and push PROD
        id: docker_build_prod
        if: ${{ github.event_name == 'release'}}
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: scoap3/scoap3:${{ github.ref_name }}

      - name: Deploy PROD
        uses: peter-evans/repository-dispatch@v1
        if: ${{ github.event_name == 'release'}}
        with:
          token: ${{ secrets.INSPIRE_BOT_TOKEN }}
          repository: inspirehep/kubernetes
          event-type: deploy
          client-payload: '{"project": "scoap3", "application": "scoap3", "namespace": "scoap3-prod","image":"scoap3/scoap3","new_tag":"${{ github.ref_name }}"}'

