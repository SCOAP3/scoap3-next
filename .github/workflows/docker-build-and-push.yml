name: test & docker build and push

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]
  release:
    types: [published]

jobs:
  tests:
    name:  test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ env.REF }}
      - name: Run services
        run: |
          docker-compose up -d indexer database redis rabbitmq;
      - name: Test
        run: |
          docker-compose -f docker-compose.yml -f docker-compose.test.yml run --rm tests

      - name: Build and push
        id: build
        if: ${{ github.event_name == 'push' || github.event_name == 'release' }}
        uses: cern-sis/gh-workflows/.github/actions/docker-build@v5.6.0
        with:
          image: scoap3/scoap3
          username: scoap3
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          cache: false

      - name: Deploy QA
        if: ${{ github.event_name == 'push'}}
        uses: cern-sis/gh-workflows/.github/actions/kubernetes-project-new-images@v6.3.0
        with:
          event-type: update
          images: ${{ steps.build.outputs.image-tags }}
          token: ${{ secrets.PAT_FIRE_EVENTS_ON_CERN_SIS_KUBERNETES_SCOAP3 }}

      - name: Deploy PROD
        if: ${{ github.event_name == 'release'}}
        uses: cern-sis/gh-workflows/.github/actions/kubernetes-project-new-images@v6.3.0
        with:
          event-type: release
          images: ${{ steps.build.outputs.image-tags }}
          token: ${{ secrets.PAT_FIRE_EVENTS_ON_CERN_SIS_KUBERNETES_SCOAP3 }}
